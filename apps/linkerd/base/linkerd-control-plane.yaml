---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["workload.linkerd.io"]
  resources: ["externalworkloads"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "get", "update", "patch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRZEw1RlB2b3ZhMzhHRDkxZFZhSkptekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOVEV3TURVeE9ESXlNVFJhRncweU5qRXdNRFV4T0RJeU1UUmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMWVTWUIvS1lROHFRWDM5RFJNclBlMXZ0dnkwbHJoTzNEeUtwa3ZnNWNXUVY3NG43eVUvNgpINmdreG5xcXVBSTQ5OHkvaVVYUnpVRlp0cm5oTC83RUNEWWZUQTBuRURMWi94ZzB5Y1VmU09Mbkc2dndWSWFEClpmWXlYZkl5bldtZlp3ZEpwVDRRYVIramt0UlhjUVB0TjJmT2JnUnhKSi9HRjRMM1J3RVhhdGxNY2poTGMrY1QKR0l4VnVJNHRIY3Nyd3U5SXR4bmxZek8wNnJkV3lXRkpTTm50dDhSZ2xsSzg1em5QbGhQWEtxcUV3ZWhycW1JdApnMDMvNmVCOGN2V1kyNHk3T2sxVVp5ejNqOHBNbjlMd1E1a0JUL1hMc05IbEZpRE85b3RxaDM2c0loMU92amhzCmRpQkV4YTZNcFRtMGdkamM2cHJ2bHlEbGhnLytreFI1SndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxBd25ucFhZbFFUNGxwWHVUY2RRNXVyeUN1NU9hS01NMDI4SzY5QW0xNlAKSTVrTCtocDB3MjlqclovbFcrVmUwRDZvZTJSQk4yMWJ0ekVHaUtjSzdseW94V05GWjlLODJGUzRlMHV5UC8wWQoyOTJ1OVJTYUZCWUhqbjF5RWp2VE5IV09XaXNxUnpxa1FyRGxyN0wwVnRybzZIV3V2cmpuMU1JZUFrY0lrKzNMCm1hYjlDMDk2amJzditoeXVVdEhsTTkrWUlmWjFMZ29DRDZqVVM0dDQwNVNmR1hlZUhkRllPM0lNT2xET3hoeFYKNisyWDhSV0F1RGdNREtFM0lZOEJ1aktXbTJrSzRTdytyWEhNbkE3Wmp4aDA3dTVLcmRzSTRhV3AzUDV2d2ltVwpJMy94ZnRDWWNGKzc5a1ordVJmMmVyOThxZFJCVTRXWlJOeFUrY1NLNWVNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMWVTWUIvS1lROHFRWDM5RFJNclBlMXZ0dnkwbHJoTzNEeUtwa3ZnNWNXUVY3NG43CnlVLzZINmdreG5xcXVBSTQ5OHkvaVVYUnpVRlp0cm5oTC83RUNEWWZUQTBuRURMWi94ZzB5Y1VmU09Mbkc2dncKVklhRFpmWXlYZkl5bldtZlp3ZEpwVDRRYVIramt0UlhjUVB0TjJmT2JnUnhKSi9HRjRMM1J3RVhhdGxNY2poTApjK2NUR0l4VnVJNHRIY3Nyd3U5SXR4bmxZek8wNnJkV3lXRkpTTm50dDhSZ2xsSzg1em5QbGhQWEtxcUV3ZWhyCnFtSXRnMDMvNmVCOGN2V1kyNHk3T2sxVVp5ejNqOHBNbjlMd1E1a0JUL1hMc05IbEZpRE85b3RxaDM2c0loMU8Kdmpoc2RpQkV4YTZNcFRtMGdkamM2cHJ2bHlEbGhnLytreFI1SndJREFRQUJBb0lCQUEzejdnajRCZFVjOElNUwpSd2laOUU2aDhMczd1T0t5QXVDTlljNG1adFRqU0YwS2FCbVBTb3ZvYzVHeEFkUk93aVJFRlNzMnhKaTZUbk1SCmpXNDNQOWJMU2wrekxKMEN2RFFjVjZFMmtkNWhmWWhSYWQ3bkJzajVkay8rUGRnRlFsMDlzcUVCWmZUOWwrQTYKL1lORlZDTDg5aENPTmZWRGZrVnlzOVVoYmU0akpTajlISGk3WjhjK2ZzYU5JVVVwZXdZeENObWEvNG50REoxWQp0dDBldng3SitndWdMUG1PUWFSYWN6bkx1NTBVUVRBZkFaTXFEUExTRUFnaXBBQ3dqL2ZIUUU2VXVqaUQ5L0h5CnV1TExJYmJBUU1QT1pnN05Rcjgzc3dUa2ZSQ2g1dW0yK3kxdm5pNFhRUEkrMDBCOWZ0dGNvU1NOZW5RSS8wR2EKMjZ6L09hVUNnWUVBOU9VWnR4Rnh2WUsrZmg5S1gxZ1Y4SHduSnZWKzJzL2VnSFhtaHROWWo1b0xhVmF4OWM1YQpwQ1laNUNpb1hXMENWVjFFcDJwQnY3NmY4SkllbFhSbFNHVDVVdUN3VXhRbDZOZVM0K0hEOVRvNVpDRUhGd00xCjR4M2pPbWR4c2tXbng2cHdLclBFR0pqdUNZb2pvS1FNdlZQdGdNeVhkdnIzUGdPME5PZUUxTXNDZ1lFQTM1ZWEKTDQ0TWd6U1B0dnNiQ1NXQWhuOE9YcE9pNWFJM3gvVnVBYTZVYnIxeEZVdGFHU2pzRHc2ZjhKb3ovZFE0VFUrYwpKbWVjU1FkNTV4ZFRVSGwwZXZWRk1EWkMvSVR5WHY2aXVhNEUrRmxZbmZMQXBVdjVqR1V0UDZjU2Z5ZFlITCtVClZpK1h1dWYvcU84ZzdGaFJNOWpaZzkzNzNhMkg5WDlxNUE1by9aVUNnWUVBandjUEVjQjZjWGhlMFVKdEtXcEUKeGdOOHltQXZDcFRGR3JuQlBaVko3L1RFSFcybzJpcisvVWZUYjFIZm8xRDdQK2dOSk1vR1JIcU01dkF3TkpHYQpaY0d6YkJnV1l5OHRST1JDd2gwbFdaLzd6T01OUlA5M0JZSjdKNjBxMWplZ1doak5FZU9UNzluQmpJakZiaGpoCjUrR1FvTnpjeVh5aDBmSlAyV1l1U2lrQ2dZQUkrNlZGTGRiUTJxYS9lajB1MCtQakEyM0hYUFVaZHJmNC82SkkKelFQSG96TE00VGNnZGFWdVFXOHBrbmh1UlQxeDFiWDNVUWhWWXNpQ0FVem1tY3FWT2c5cWpYT0pnNm5kS1N2TwplL0JWTGZuQ2RzTklvTkhJMHpQTEwrSXRXNTVOb1dETFNhUTE3U1kzV2t3ZlVya0lkVGpmOUdZdkZNNjJqVVQxCkhxTVhOUUtCZ0VEd1puQ1BIdTF1S0ZXR1pxRFhZY0V0MnRsL1N3cjRNVUZEakt4OFUrZmJ1MGs4ZFpucHpJN28KeitJYk85Z0dnNTQwME1vMDRVc1V4SDBMaWhNWTlhN0grNmpNcEN6Tk9aak8zRVM4MW1CSENJZUY0OFBxK2NrUAp0Ky94ZU1TU0RaaEo0TExaemZqQUo5a3h4dld6MC9zN2tqK2VBT2ZEcWIwSGJNbC9NQTFsCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRZEw1RlB2b3ZhMzhHRDkxZFZhSkptekFOQmdrcWhraUc5dzBCQVFzRkFEQXIKTVNrd0p3WURWUVFERXlCc2FXNXJaWEprTFhOd0xYWmhiR2xrWVhSdmNpNXNhVzVyWlhKa0xuTjJZekFlRncweQpOVEV3TURVeE9ESXlNVFJhRncweU5qRXdNRFV4T0RJeU1UUmFNQ3N4S1RBbkJnTlZCQU1USUd4cGJtdGxjbVF0CmMzQXRkbUZzYVdSaGRHOXlMbXhwYm10bGNtUXVjM1pqTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEEKTUlJQkNnS0NBUUVBMWVTWUIvS1lROHFRWDM5RFJNclBlMXZ0dnkwbHJoTzNEeUtwa3ZnNWNXUVY3NG43eVUvNgpINmdreG5xcXVBSTQ5OHkvaVVYUnpVRlp0cm5oTC83RUNEWWZUQTBuRURMWi94ZzB5Y1VmU09Mbkc2dndWSWFEClpmWXlYZkl5bldtZlp3ZEpwVDRRYVIramt0UlhjUVB0TjJmT2JnUnhKSi9HRjRMM1J3RVhhdGxNY2poTGMrY1QKR0l4VnVJNHRIY3Nyd3U5SXR4bmxZek8wNnJkV3lXRkpTTm50dDhSZ2xsSzg1em5QbGhQWEtxcUV3ZWhycW1JdApnMDMvNmVCOGN2V1kyNHk3T2sxVVp5ejNqOHBNbjlMd1E1a0JUL1hMc05IbEZpRE85b3RxaDM2c0loMU92amhzCmRpQkV4YTZNcFRtMGdkamM2cHJ2bHlEbGhnLytreFI1SndJREFRQUJvMnd3YWpBT0JnTlZIUThCQWY4RUJBTUMKQmFBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpLd1lEVlIwUkJDUXdJb0lnYkdsdWEyVnlaQzF6Y0MxMllXeHBaR0YwYjNJdWJHbHVhMlZ5WkM1emRtTXdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUxBd25ucFhZbFFUNGxwWHVUY2RRNXVyeUN1NU9hS01NMDI4SzY5QW0xNlAKSTVrTCtocDB3MjlqclovbFcrVmUwRDZvZTJSQk4yMWJ0ekVHaUtjSzdseW94V05GWjlLODJGUzRlMHV5UC8wWQoyOTJ1OVJTYUZCWUhqbjF5RWp2VE5IV09XaXNxUnpxa1FyRGxyN0wwVnRybzZIV3V2cmpuMU1JZUFrY0lrKzNMCm1hYjlDMDk2amJzditoeXVVdEhsTTkrWUlmWjFMZ29DRDZqVVM0dDQwNVNmR1hlZUhkRllPM0lNT2xET3hoeFYKNisyWDhSV0F1RGdNREtFM0lZOEJ1aktXbTJrSzRTdytyWEhNbkE3Wmp4aDA3dTVLcmRzSTRhV3AzUDV2d2ltVwpJMy94ZnRDWWNGKzc5a1ordVJmMmVyOThxZFJCVTRXWlJOeFUrY1NLNWVNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRVkg3MG9tM2RvWGJyL25wckIxdGIzVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVeE1EQTFNVGd5TWpFMVdoY05Nall4TURBMU1UZ3lNakUxV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDQXp0b2dGWFQ2YWkxbTl2blRNb0ZFTFJpN21WTko5WG0yMXArd0h0NApKUmFwemk1Zjd4eDVhMEpxZGlHNlU3bmJwcUd4OHp3Sk9rY0JPOS85ZHFuM3hid2x3QVNJSit3NFpKNlgxNG9rCmJSdGIzbHZ4aEJIaGRTTUI2TzFicGJHOGZ3WjRCZEJ0bDBXSUlwWjFGejlTc2wzbjVnS0tqNWE3Q1NKRXRUd04KYlZWeEFWSml0K0o1aTVhUVR2YU5aVWR6K3FGYnNNUko0MWF6N2VvczdoWFNCdysrcmhLRVJDanp0Nmpxdi80cgpwOFhEWlZ5ZTFvK3JYR0ZMMWllVzNLdm51WUd0ZGFpclVOWUFyZTZIMm05Zm1tczFSZlBGZjd0MGIzT3NRbGFKCjdFalZDR2F6VUxaeUJvWVc5RUpMR1R5MVZzNzVVTU12QjluUlcwSWp3dktYQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHam9UQUVUWXZSNzhDT3JJNy9wWklyWjEzc1EKc211WDJRY25LbFl2ZjRtRGhzQXhkV1BiSDNlUUhrZnQ2S3IvKzd5ZXlTQjJtRUo4ZElIaXpRcWQ4b2RIYkdkYQp5NUpON0ZNZUxWOFZMc01lbWpYaEx3bXFiQWNsTGQwWmhFOTJPeDFIODdMc1ZIYzBVbktqRUFraEIvVTVPdEpsCmFZZjZndm9WanJUSTJrdUt3NlBUcE41dEw3NnlSYlgxTUFpRFgrYS93ZlRLcVMvMDEvdisxVDR4cXpUOTczWXAKM0JnRjBGb1lyc0k1QkM4a2xDZnNLeU9SbHFsbGd6SGdiYkd2QWNxYW9sRTlsTFZEZVlOWWdhMitHdTJTZWljego2NFBtRm1NMW1wMzJUT0NMcEpxSitSblhYMlV4bWE2YWljbGNRaDBDUGdicjRDQzdjQVg2UWxiRXdyWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2dNN2FJQlYwK21vdFp2YjUwektCUkMwWXU1bFRTZlY1dHRhZnNCN2VDVVdxYzR1ClgrOGNlV3RDYW5ZaHVsTzUyNmFoc2ZNOENUcEhBVHZmL1hhcDk4VzhKY0FFaUNmc09HU2VsOWVLSkcwYlc5NWIKOFlRUjRYVWpBZWp0VzZXeHZIOEdlQVhRYlpkRmlDS1dkUmMvVXJKZDUrWUNpbytXdXdraVJMVThEVzFWY1FGUwpZcmZpZVl1V2tFNzJqV1ZIYy9xaFc3REVTZU5XcyszcUxPNFYwZ2NQdnE0U2hFUW84N2VvNnIvK0s2ZkZ3MlZjCm50YVBxMXhoUzlZbmx0eXI1N21CclhXb3ExRFdBSzN1aDlwdlg1cHJOVVh6eFgrN2RHOXpyRUpXaWV4STFRaG0KczFDMmNnYUdGdlJDU3hrOHRWYk8rVkRETHdmWjBWdENJOEx5bHdJREFRQUJBb0lCQUJ4RkYwdC9ZOEk0cW1ZbwpHMDlsVDR5VVpneUNXMDEyVUFOUEZDMGpBL3E2UU1hbWJmaDVvWWNKdTRoQ3hXQmVvZGJoUFc5dUYySHExWHpYCkNpam5PUllMQUlMcHExOWhuZGlMeE5Zd1NJZE5SSzdLeEUvNVpCZWJsMm5JVkluRnA1UGxXSDUxcm16Qm5aYWMKSDV0Wk0xZHIrU1g0ekliL0xFSDlyem9leEd6YU1DVG45d0h4MmNBRHZQbmxGQmlHVEZCbS9hdjl2YXZzVEVQaApYbExLSXNlVzJUek9LWWtTQjU1MVprS0lSdThBTmJkRTRGcjhxUnZaUmc5bVo3MzJzdHNkUFE1dVFhVmJuSEtICkhEOFF2SGNMMHI5dnhDWHN2Q0FtRVRrNnZHZCt1YUhONlRSc1ZIOFlhMzJQWXVpMEJVNEg0OHFhR3VVU05pekwKcFpGamFMRUNnWUVBM0lkSW9Sc2JVKzJyU2lPM2pITURucFpjOGwxVWMwUkw3azRnU1ZwOUhKYlN1bTlhakoxaQo4NUJiQlU1Ky9pM0RMbGRMMHdtbzgwRXZHdFdWNDFHYXRCS0d3emxKRm9GQ0ppdkwvMW1oMXFQU0MvMUlCWnVsCnBUV1crSTl6NERhSE1PNFNjUFlaVkJrY0pIRmt6TzFDbHBXajVqRi9aYi9wVDhyaTVicUhkTWNDZ1lFQTRUZ2EKclVtdDlwUEZkdHR3bFhMRTdzMHprNloxNW1xcnJzbzFOU2g3VGxwZzJoL2FQOVZ3aCtBdGp4ZEYvTE5MOU1SbQozR0hHSk9mbEIrMm5SWHI3WElwNElZNnFSU2Y1RHVvcWsyWlVmVHdUbVk4Rnp6eFd4S0h5enpvaW02TElTck8wCkRZL3NmOEhpSDFNMTRhUHhSTXdSSzMzZklYekM5Ujh0bi9POEk3RUNnWUVBdnZERGlmcVdac3phQ285eVZVRWcKV1NlSHdySGNkUkVsVFdpSHUvdUZhRU9Pb2EzWWtQZVV2WjYzc0ppT2pEWERVVlIwYW4xcXMzUTAvTjhCc0pqdgpnZ3FvZEZBZFlFYjZwMkkwZHh0OGJRUGEwbGF6RFdmK3ZGVHlLclRLZDgrK3JqYno4S3FrczVRcU1jT2NxM0tpCnZROURvZ1FwY2tnQUV2NXdCc2pDai9FQ2dZRUFnbjNUVnh3ZG80U3pJTTY4U0pzYTU1SVZsRE1hbE1xeGRyREsKYTJadEsxVEtVUmVyaU5qT1BxdnhPYnN1WGVBMDNqajlzQ3NtZHpPMVRBYXlxRnM5VUwwYUpiZFhpSUpFbUJPdApYNEltNmZqcEVrdi8vYmJrUDBIbVFaTlpnZnVyT1QwdDBiM1dOWi9NdUlHcDhuYmUwQkc4MFFvNVFsbmJTOU1vCnlFaWNkY0VDZ1lCQ2JwZ0h6K0k3TFJqYlZnQ0M4Tnp6K3NHSjQwZ24zNmFOL0VWWFlobW91OEkzRkt3blBsK0kKOU5VTldmTzZ5M2E1ZVI2WDN3NHhzdGRkOEhZejFUZ1hCWHlqTVZaWG5QMUlHWUZhcGVHeHIvRTI1ei9TQy9xQgovYTU0QVhObVpPb2xEOWhtMU5NRzI0SllFMEVsaklLMm9nRmh6OVNJckFQK3dGUTJjSXkwU1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRVkg3MG9tM2RvWGJyL25wckIxdGIzVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVeE1EQTFNVGd5TWpFMVdoY05Nall4TURBMU1UZ3lNakUxV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURDQXp0b2dGWFQ2YWkxbTl2blRNb0ZFTFJpN21WTko5WG0yMXArd0h0NApKUmFwemk1Zjd4eDVhMEpxZGlHNlU3bmJwcUd4OHp3Sk9rY0JPOS85ZHFuM3hid2x3QVNJSit3NFpKNlgxNG9rCmJSdGIzbHZ4aEJIaGRTTUI2TzFicGJHOGZ3WjRCZEJ0bDBXSUlwWjFGejlTc2wzbjVnS0tqNWE3Q1NKRXRUd04KYlZWeEFWSml0K0o1aTVhUVR2YU5aVWR6K3FGYnNNUko0MWF6N2VvczdoWFNCdysrcmhLRVJDanp0Nmpxdi80cgpwOFhEWlZ5ZTFvK3JYR0ZMMWllVzNLdm51WUd0ZGFpclVOWUFyZTZIMm05Zm1tczFSZlBGZjd0MGIzT3NRbGFKCjdFalZDR2F6VUxaeUJvWVc5RUpMR1R5MVZzNzVVTU12QjluUlcwSWp3dktYQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHam9UQUVUWXZSNzhDT3JJNy9wWklyWjEzc1EKc211WDJRY25LbFl2ZjRtRGhzQXhkV1BiSDNlUUhrZnQ2S3IvKzd5ZXlTQjJtRUo4ZElIaXpRcWQ4b2RIYkdkYQp5NUpON0ZNZUxWOFZMc01lbWpYaEx3bXFiQWNsTGQwWmhFOTJPeDFIODdMc1ZIYzBVbktqRUFraEIvVTVPdEpsCmFZZjZndm9WanJUSTJrdUt3NlBUcE41dEw3NnlSYlgxTUFpRFgrYS93ZlRLcVMvMDEvdisxVDR4cXpUOTczWXAKM0JnRjBGb1lyc0k1QkM4a2xDZnNLeU9SbHFsbGd6SGdiYkd2QWNxYW9sRTlsTFZEZVlOWWdhMitHdTJTZWljego2NFBtRm1NMW1wMzJUT0NMcEpxSitSblhYMlV4bWE2YWljbGNRaDBDUGdicjRDQzdjQVg2UWxiRXdyWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httplocalratelimitpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
    - egressnetworks
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["gateway.networking.k8s.io"]
    apiVersions: ["*"]
    resources:
    - httproutes
    - grpcroutes
    - tlsroutes
    - tcproutes
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httplocalratelimitpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
      - egressnetworks
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
      - grpcroutes
      - tlsroutes
      - tcproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
      - httplocalratelimitpolicies/status
      - egressnetworks/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
      - grpcroutes/status
      - tlsroutes/status
      - tcproutes/status
    verbs:
      - patch
  - apiGroups:
      - workload.linkerd.io
    resources:
      - externalworkloads
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZUJzMGROR3cySjY1dU5hMzlWdWRMakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkxTVRBd05URTRNakl4TTFvWERUSTJNVEF3TlRFNE1qSXhNMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMRU5Vc096QnhjcDVBQUZWWW5VQTJFWHkwL2F1Y3UxWkNEYmx5NWNqZDNZZVQ3dQpnK24waldFeDg2MnluNXBUa2RGZThWdnFZQnZTVFJpdW13Zk5hcFh0OWpoV3ZQSkZrVGN3b2diYXhLb1hTNnM5CloyTlFCeDBlTm5ORkRrckxFN0FkMXB5QVIyMW1mZjhrY0o3S24yTEJ0MDNzVVBZMjhVd1lkbGtOZ25NSEM2eDcKRlRzK2c3a2l5Q2xYRkhSWDdmVFkwRHkvcFVVRzB6OVNDaEVaTjhibWVkUm5SMjFyWVp3eUo5SElqSDBOVEJiagprNHhXeWdHN0pTRVNlbmpZbGhFSWZIYjQ5T2pjUmVwaVRRek1kcjdMZXJ0Sk5Ub0tPaFJhQno4a2dWVlRObWswCkVLeHE5NmVvdlNUam1STlBsOHROTUt3V1oxUUlGK0VFUDFNa0VVY0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSXdlbzBsemFTZlRzRDU0NkFwdmZwRzFuRVJwV2VHekRPVksKeW1vRGtublByM3BIdk02YzFjemVzSDAyYnRDSjFvYWl1MHBMdGRWdE9lNjE5ZXZack54SUlFWFVHM2hyb01NVgpTdVJEdmdvU1BPZld0aTNhaW9wZ3dud0E5VHlrZHhsYjN3eGE2YVRnMEN6MVM3bzNJZXowRjc4YVdmMEpYSFk5CnczV0Yxb2p2TEduTFJ5d0IvTlVyNGwvaHlLajJtbzU2cFRET04zeWtGb0pWMFg3b2xGTHh6dTlNdEVPWmRwT2oKbFNFQXd3K3VNTC96UmRJaHI4QU8zVXNaaW1zOS9FOHRSNVBYZFIzb1R6MEF0NkVNVFR3SmlUNTBnYkRNY05xbAplVWRCbFhNc2x0QjR0Nm9odFVtQmlodmk2ZlJ6aVV0d2lDMGdLRklJZWJmQ3BVNGR4VFE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc1ExU3c3TUhGeW5rQUFWVmlkUURZUmZMVDlxNXk3VmtJTnVYTGx5TjNkaDVQdTZECjZmU05ZVEh6cmJLZm1sT1IwVjd4VytwZ0c5Sk5HSzZiQjgxcWxlMzJPRmE4OGtXUk56Q2lCdHJFcWhkTHF6MW4KWTFBSEhSNDJjMFVPU3NzVHNCM1duSUJIYldaOS95Unduc3FmWXNHM1RleFE5amJ4VEJoMldRMkNjd2NMckhzVgpPejZEdVNMSUtWY1VkRmZ0OU5qUVBMK2xSUWJUUDFJS0VSazN4dVo1MUdkSGJXdGhuREluMGNpTWZRMU1GdU9UCmpGYktBYnNsSVJKNmVOaVdFUWg4ZHZqMDZOeEY2bUpORE14MnZzdDZ1MGsxT2dvNkZGb0hQeVNCVlZNMmFUUVEKckdyM3A2aTlKT09aRTArWHkwMHdyQlpuVkFnWDRRUS9VeVFSUndJREFRQUJBb0lCQUFwT05BS1F6MVRHQ3hSTgpoRkxmTzRwRHZLWUVuV3JxOWpKQ2p2MktWeTBJNUNDazFDeXJuNzlhVm5vei80YnpKNW9yYjhoVDZ0L0RzVWVMCnVJZGhZSmJyN205V28yMUZPVFJwaVF6Uk8zY2Nld1BYK24wK0pnaHNvNDhtZjMxbHR4SGVUaTMyMWN6dHVjMVEKdEN5V2lvbStZenpPclN3RU94dkJiaTgxTndhc3dOQzVXV0VPeHM0UDZ1OXQ3NmgzSGMzQ0YycXN6eDB0RkYvUApqcDFCdTY0NFpJSkNBYUdrTVdxOWFwN1ZIeUplVHBOcjFuaHZueHdIbDNFTVZ5SUhnQXNjWGk3eGhhWmU2cXh6ClkxY2ttVWY2bnBZNEJERk1mNWREVER4c2FtODRlc3RZejk3SHFnMUxPV25kdkpPSG9Mb0h1akx6UlNJWmlEcDUKUlkrYkcvVUNnWUVBNVdIbWRWSDdyaWRSSFJWd3lVbDdpM0c2UTdnUjdiNjc0RHRKS2dSMUduS3BkQUVRM2k5OApzTmdjZC9kVFlPaW9aemEvbHNPR3kxNUhmWUpzQmw2M0RSaUFGSkRwZ29wRjNaMXdYMVhZUGI5MStFWEJFQWlYCmJpWjVOOUhVc25LTGRWSGN4QUQwZ3ZaNlp3dk9EbW14bXRjZ2JyZi9nYkpUdGtlYVA3d1ZuajBDZ1lFQXhaamgKdytoUG96SUJPdW4yN2xVWHh6TWdiUUx4NTdEMkxUWk45YzlzVmd5d2lYVEdKRnAyQnlWRldwYUd2RzZkZ0FoVApjM0N2c29wSlZ0TVNwRDR4ajFDWjY4TlJOVWNwWjFuSzNGYzUxY0srek8ybGpOVXNpajZsdzJaRStFaVJVOE1CCmJxb1F3eDRYWHUrZnlYV2dlNU1idlUrY01ncEdTMWpnM0toMGlkTUNnWUFta3ZFYmQ1NzRhWG8xaHQ2QnF3N1EKbzE1c2R1N2s2VGRVL1FOUHdwSWkwWGQzbjVwRGt2N0lDbiszR090M2w0aUNXdTJiSCtSeUhMZXUvcGpGOVhXWgpDUzY0eHFuT0h3eWl1UkFscUIwR1BVVk1iQWFNZUxWbWU2ZlU0RCtCaHN1Mi9mNC9JOTM2akJLSGM2L0NNcm9BClRQOFNQM1VEVFliUVYzZzBFYUFkRFFLQmdDcVZwREpBWXNsZEFYN2M1V2EvMS93S1BMYkJwN2l6SHBybjFTMWcKb294NDk2TG9FN3ZKOHgzZkhtOURlWTRxbUs3N0hHRUlyQlRpVUtQeG9WYmNRSG9PZU4yaW5tSEpFRmRCdHNKOQoyZTBEcDNNcTFEN2h3bE9ZNU1pVHhkRnNja1dIQlV3QVF0U0tLNmMrSlVXWm9CaUJ2N3l3NTR5eFFpMEMzcE12CmlzNFpBb0dBQy9sYkE3Wk9XRVdSZnNoa081dHBvUUMyRjBINjZHcSs5djFMUEVtUXpUa0FYYi8wVEkxQ1I0cWQKRTlnYWFDQ2YvNFdvbkJTcVhaUFl0VmlnREtGYXRQeTNjSTFoN3dCaXJPWTJQeGNtSFpaUDJuMHRBTlluM3Q4LwpvVEYwSHAyYUtTVW5lOWNsK1JTdDFJMGFpL1hlb2NSWDlKblFoUDJud1pWUlBENkk4OHM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZUJzMGROR3cySjY1dU5hMzlWdWRMakFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkxTVRBd05URTRNakl4TTFvWERUSTJNVEF3TlRFNE1qSXhNMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMRU5Vc096QnhjcDVBQUZWWW5VQTJFWHkwL2F1Y3UxWkNEYmx5NWNqZDNZZVQ3dQpnK24waldFeDg2MnluNXBUa2RGZThWdnFZQnZTVFJpdW13Zk5hcFh0OWpoV3ZQSkZrVGN3b2diYXhLb1hTNnM5CloyTlFCeDBlTm5ORkRrckxFN0FkMXB5QVIyMW1mZjhrY0o3S24yTEJ0MDNzVVBZMjhVd1lkbGtOZ25NSEM2eDcKRlRzK2c3a2l5Q2xYRkhSWDdmVFkwRHkvcFVVRzB6OVNDaEVaTjhibWVkUm5SMjFyWVp3eUo5SElqSDBOVEJiagprNHhXeWdHN0pTRVNlbmpZbGhFSWZIYjQ5T2pjUmVwaVRRek1kcjdMZXJ0Sk5Ub0tPaFJhQno4a2dWVlRObWswCkVLeHE5NmVvdlNUam1STlBsOHROTUt3V1oxUUlGK0VFUDFNa0VVY0NBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSXdlbzBsemFTZlRzRDU0NkFwdmZwRzFuRVJwV2VHekRPVksKeW1vRGtublByM3BIdk02YzFjemVzSDAyYnRDSjFvYWl1MHBMdGRWdE9lNjE5ZXZack54SUlFWFVHM2hyb01NVgpTdVJEdmdvU1BPZld0aTNhaW9wZ3dud0E5VHlrZHhsYjN3eGE2YVRnMEN6MVM3bzNJZXowRjc4YVdmMEpYSFk5CnczV0Yxb2p2TEduTFJ5d0IvTlVyNGwvaHlLajJtbzU2cFRET04zeWtGb0pWMFg3b2xGTHh6dTlNdEVPWmRwT2oKbFNFQXd3K3VNTC96UmRJaHI4QU8zVXNaaW1zOS9FOHRSNVBYZFIzb1R6MEF0NkVNVFR3SmlUNTBnYkRNY05xbAplVWRCbFhNc2x0QjR0Nm9odFVtQmlodmk2ZlJ6aVV0d2lDMGdLRklJZWJmQ3BVNGR4VFE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
    scope: "Namespaced"
  sideEffects: None
  timeoutSeconds: 10
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli edge-25.10.1
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
    cniEnabled: false
    controller:
      podDisruptionBudget:
        maxUnavailable: "1"
      tracing:
        collector:
          endpoint: ""
          meshIdentity: null
        enabled: false
        protocol: ""
        traceServiceName: ""
    controllerGID: -1
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: edge-25.10.1
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationController:
      meshedHttp2ClientProtobuf:
        keep_alive:
          interval:
            seconds: 10
          timeout:
            seconds: 3
          while_idle: true
      podAnnotations: {}
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    disableIPv6: true
    egress:
      globalEgressNetworkNamespace: linkerd-egress
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeat: null
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      additionalEnv: null
      experimentalEnv: null
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yNTEwMDUxODIyMDJaFw0yNjEwMDUxODIyMjJaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEGza+sUAU+3rmSI/NWDnHtPQtSNaJBDthiCsPRSCHW3WxhuItP0/wV4vhx5cc
            ct5b2whzlTSF546t2sILEG7x3aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBSxzN9dPVrXFxSTMMcm36hQwEnzHTAKBggqhkjOPQQDAgNIADBFAiBaDpIoZRi9
            r/muv9cr5oqdcx5UrG7q//wC5eecuV9zEwIhAPbnCYPdxNgcVekMYAlBPIHQWP/F
            hAUqzMhedHuK5gaC
            -----END CERTIFICATE-----
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      podAnnotations: {}
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yNTEwMDUxODIyMDJaFw0yNjEwMDUxODIyMjJaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEGza+sUAU+3rmSI/NWDnHtPQtSNaJBDthiCsPRSCHW3WxhuItP0/wV4vhx5cc
      ct5b2whzlTSF546t2sILEG7x3aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSxzN9dPVrXFxSTMMcm36hQwEnzHTAKBggqhkjOPQQDAgNIADBFAiBaDpIoZRi9
      r/muv9cr5oqdcx5UrG7q//wC5eecuV9zEwIhAPbnCYPdxNgcVekMYAlBPIHQWP/F
      hAUqzMhedHuK5gaC
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: edge-25.10.1
    networkValidator:
      connectAddr: ""
      listenAddr: ""
      logFormat: plain
      logLevel: debug
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      - ::/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      additionalEnv: null
      await: true
      capabilities: null
      control:
        streams:
          idleTimeout: 5m
          initialTimeout: 3s
          lifetime: 1h
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      enableShutdownEndpoint: false
      experimentalEnv: null
      gid: -1
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      livenessProbe:
        initialDelaySeconds: 10
        timeoutSeconds: 1
      logFormat: plain
      logHTTPHeaders: "off"
      logLevel: warn,linkerd=info,hickory=error
      metrics:
        hostnameLabels: false
      nativeSidecar: false
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      outboundTransportMode: transport-header
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      readinessProbe:
        initialDelaySeconds: 2
        timeoutSeconds: 1
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      runtime:
        workers:
          minimum: 1
      saMountPath: null
      securityContext: {}
      shutdownGracePeriod: ""
      startupProbe:
        failureThreshold: 120
        initialDelaySeconds: 0
        periodSeconds: 1
      tracing:
        collector:
          endpoint: ""
          meshIdentity:
            namespace: ""
            serviceAccountName: ""
        enabled: false
        protocol: ""
        traceServiceName: linkerd-proxy
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.4.3
      iptablesMode: nft
      kubeAPIServerPorts: 443,443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources: null
      runAsGroup: 65534
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      additionalEnv: null
      caBundle: ""
      crtPEM: ""
      experimentalEnv: null
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
      podAnnotations: {}
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    revisionHistoryLimit: 10
    spValidator:
      livenessProbe:
        timeoutSeconds: 1
      readinessProbe:
        timeoutSeconds: 1
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlOVEV3TURVeE9ESXlNREphRncweU5qRXdNRFV4T0RJeU1qSmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVHemErc1VBVSszcm1TSS9OV0RuSHRQUXRTTmFKQkR0aGlDc1BSU0NIVzNXeGh1SXRQMC93VjR2aHg1Y2MKY3Q1YjJ3aHpsVFNGNTQ2dDJzSUxFRzd4M2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCU3h6TjlkUFZyWEZ4U1RNTWNtMzZoUXdFbnpIVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJhRHBJb1pSaTkKci9tdXY5Y3I1b3FkY3g1VXJHN3EvL3dDNWVlY3VWOXpFd0loQVBibkNZUGR4TmdjVmVrTVlBbEJQSUhRV1AvRgpoQVVxek1oZWRIdUs1Z2FDCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUlBamtaS2Q1cldsMk01RDQvM1o0V3VoSGxQZzYyOFdKdS9NRVJnVUcrSEdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR3phK3NVQVUrM3JtU0kvTldEbkh0UFF0U05hSkJEdGhpQ3NQUlNDSFczV3hodUl0UDAvdwpWNHZoeDVjY2N0NWIyd2h6bFRTRjU0NnQyc0lMRUc3eDNRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiDCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yNTEwMDUxODIyMDJaFw0yNjEwMDUxODIyMjJaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEGza+sUAU+3rmSI/NWDnHtPQtSNaJBDthiCsPRSCHW3WxhuItP0/wV4vhx5cc
    ct5b2whzlTSF546t2sILEG7x3aNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBSxzN9dPVrXFxSTMMcm36hQwEnzHTAKBggqhkjOPQQDAgNIADBFAiBaDpIoZRi9
    r/muv9cr5oqdcx5UrG7q//wC5eecuV9zEwIhAPbnCYPdxNgcVekMYAlBPIHQWP/F
    hAUqzMhedHuK5gaC
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.10.1
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-25.10.1
        linkerd.io/proxy-version: edge-25.10.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: ec3657172b78317e9939b0e8050743f711758830b480bee4527ce4b841900013
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      automountServiceAccountToken: false
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        - -kube-apiclient-qps=100
        - -kube-apiclient-burst=200
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: ident-grpc
        - containerPort: 9990
          name: ident-admin
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_ip
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
          value: "false"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --firewall-bin-path
        - "iptables-nft"
        - --firewall-save-bin-path
        - "iptables-nft-save"
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.10.1
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: c466a0c89d287eb6626ca070a97dbf1fa181d1a47d55b1cc8b0327108d1d44d1
        linkerd.io/created-by: linkerd/cli edge-25.10.1
        linkerd.io/proxy-version: edge-25.10.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: ec3657172b78317e9939b0e8050743f711758830b480bee4527ce4b841900013
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      automountServiceAccountToken: false
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_ip
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
          value: "false"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -outbound-transport-mode=transport-header
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-ipv6=false
        - -enable-pprof=false
        - --meshed-http2-client-params={"keep_alive":{"interval":{"seconds":10},"timeout":{"seconds":3},"while_idle":true}}
        image: cr.l5d.io/linkerd/controller:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: dest-grpc
        - containerPort: 9996
          name: dest-admin
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: spval-admin
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
          timeoutSeconds: 1
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - command: ["/linkerd-policy-controller"]
        args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --global-egress-network-namespace=linkerd-egress
        - --probe-networks=0.0.0.0/0,::/0
        image: cr.l5d.io/linkerd/controller:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: policy-admin
          initialDelaySeconds: 10
        name: policy
        ports:
        - containerPort: 8090
          name: policy-grpc
        - containerPort: 9990
          name: policy-admin
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: policy-admin
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      initContainers:
      - args:
        - --firewall-bin-path
        - "iptables-nft"
        - --firewall-save-bin-path
        - "iptables-nft-save"
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
      
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.10.1
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
spec:
  concurrencyPolicy: Replace
  schedule: "32 18 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli edge-25.10.1
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          automountServiceAccountToken: false
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:edge-25.10.1
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
          volumes:
          - name: kube-api-access
            projected:
              defaultMode: 420
              sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                  - key: ca.crt
                    path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                  - fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                    path: namespace
---
###
### Proxy Injector
###

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.10.1
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 8135a5c4d0d84e2712d538730d4faa29a7a672fc9d6513ce41ed767b60ca3c5b
        linkerd.io/created-by: linkerd/cli edge-25.10.1
        linkerd.io/proxy-version: edge-25.10.1
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: ec3657172b78317e9939b0e8050743f711758830b480bee4527ce4b841900013
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      automountServiceAccountToken: false
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_ip
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
          value: "false"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-25.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: injector-admin
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      initContainers:
      - args:
        - --firewall-bin-path
        - "iptables-nft"
        - --firewall-save-bin-path
        - "iptables-nft-save"
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.3
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          runAsGroup: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
      
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli edge-25.10.1
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaURDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlOVEV3TURVeE9ESXlNREphRncweU5qRXdNRFV4T0RJeU1qSmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFR3phK3NVQVUrM3JtU0kvTldEbkh0UFF0U05hSkJEdGhpQ3NQUlNDSFczV3hodUl0UDAvd1Y0dmh4NWNjCiAgICAgICAgY3Q1YjJ3aHpsVFNGNTQ2dDJzSUxFRzd4M2FOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlN4ek45ZFBWclhGeFNUTU1jbTM2aFF3RW56SFRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlCYURwSW9aUmk5CiAgICAgICAgci9tdXY5Y3I1b3FkY3g1VXJHN3EvL3dDNWVlY3VWOXpFd0loQVBibkNZUGR4TmdjVmVrTVlBbEJQSUhRV1AvRgogICAgICAgIGhBVXF6TWhlZEh1SzVnYUMKICAgICAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAgIGtleVBFTTogfAogICAgICAgIC0tLS0tQkVHSU4gRUMgUFJJVkFURSBLRVktLS0tLQogICAgICAgIE1IY0NBUUVFSUlBamtaS2Q1cldsMk01RDQvM1o0V3VoSGxQZzYyOFdKdS9NRVJnVUcrSEdvQW9HQ0NxR1NNNDkKICAgICAgICBBd0VIb1VRRFFnQUVHemErc1VBVSszcm1TSS9OV0RuSHRQUXRTTmFKQkR0aGlDc1BSU0NIVzNXeGh1SXRQMC93CiAgICAgICAgVjR2aHg1Y2NjdDViMndoemxUU0Y1NDZ0MnNJTEVHN3gzUT09CiAgICAgICAgLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQppZGVudGl0eVRydXN0QW5jaG9yc1BFTTogfAogIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogIE1JSUJpRENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKICBlUzVzYVc1clpYSmtMakFlRncweU5URXdNRFV4T0RJeU1ESmFGdzB5TmpFd01EVXhPREl5TWpKYU1Cd3hHakFZCiAgQmdOVkJBTVRFV2xrWlc1MGFYUjVMbXhwYm10bGNtUXVNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRAogIFFnQUVHemErc1VBVSszcm1TSS9OV0RuSHRQUXRTTmFKQkR0aGlDc1BSU0NIVzNXeGh1SXRQMC93VjR2aHg1Y2MKICBjdDViMndoemxUU0Y1NDZ0MnNJTEVHN3gzYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0VHTUIwR0ExVWRKUVFXCiAgTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwogIEJCU3h6TjlkUFZyWEZ4U1RNTWNtMzZoUXdFbnpIVEFLQmdncWhrak9QUVFEQWdOSUFEQkZBaUJhRHBJb1pSaTkKICByL211djljcjVvcWRjeDVVckc3cS8vd0M1ZWVjdVY5ekV3SWhBUGJuQ1lQZHhOZ2NWZWtNWUFsQlBJSFFXUC9GCiAgaEFVcXpNaGVkSHVLNWdhQwogIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KcHJveHlJbml0OgogIGt1YmVBUElTZXJ2ZXJQb3J0czogNDQzLDQ0Mwo=
kind: Secret
metadata:
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
